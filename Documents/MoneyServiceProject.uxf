<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>1040</y>
      <w>50</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>1...n
lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>210</x>
      <y>0</y>
      <w>220</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>2021-05-05

Project Manager = Karl, 
Sys Architect = Peter, 
Programmer = ALL.

Third version: 2021-04-12
Checked functionality, added some notes for progress.

Second version: 2021-04-08

First version: Date: 2021-04-07


style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>750</y>
      <w>30</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>1
lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>470</x>
      <y>590</y>
      <w>150</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1010</x>
      <y>430</y>
      <w>170</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>150.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>750</y>
      <w>730</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>710.0;150.0;710.0;30.0;10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>750</y>
      <w>320</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>300.0;150.0;300.0;60.0;10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>110</x>
      <y>750</y>
      <w>570</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;60.0;550.0;60.0;550.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1010</x>
      <y>540</y>
      <w>170</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>1
lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;150.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>330</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>900</y>
      <w>380</w>
      <h>500</h>
    </coordinates>
    <panel_attributes>Config
--
-siteName = "default": String
-logName = "MoneyServiceLog": String
-logFormat = "text": String
-logLevel = "OFF": String
-MIN_AMMOUNT = 50: int
-MAX_AMMOUNT = 50000: int
-buyRateConfig = 0.995f: float
-sellRateConfig = 1.005F: float
-password = "Qwerty1234!": String
+exchangeRateList = new ArrayList&lt;ExchangeRate&gt;(): List&lt;ExchangeRate&gt;
-logger: Logger
--
+getLogName(): String
+getExchangeRateList(): List&lt;ExchangeRate&gt;
+setMIN_AMMOUNT(int MIN_AMMOUNT): boolean
+setMAX_AMMOUNT(int MAX_AMMOUNT): boolean
+getMIN_AMMOUNT(): int
+getMAX_AMMOUNT(): int
+getBuyRateConfig(): float
+setBuyRateConfig(float buyRateConfig): void
+getSellRateConfig(): float
+setSellRateConfig(float sellRateConfig): void
+setUpLogger(Logger logger, FileHandler fh, String[] args): Logger
+readConfigFile(String filename): boolean
#setPassword(String password): void
+getLogFormat(): String
+getLogLevel(): String
+setLogName(String logName): void
+setLogFormat(String logFormat): void
+setLogLevel(Level logLevel): void
+setLogger(Logger logger): void
+setRatesInCurrency(List&lt;ExchangeRate&gt; currencyList, Map&lt;String, Currency&gt; currencyMap): void
+setTheRates(): List&lt;ExchangeRate&gt;
+fillTheMoneyBox(MoneyBox theBox, Map&lt;String, Currency&gt; currencyMap): MoneyBox
+getPassword(): String
+getSiteName(): String
+setSiteName(String siteName): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>1120</y>
      <w>280</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>affix.java.project.moneyservice::Currency
--
-serialVersionUID = 1L: long
-totalValue: double
~buyRate: Float
~sellRate: Float
--
+Currency(int totalValue, Float buyRate, Float sellRate): ctor
+getBuyRate(): Float
+setBuyRate(Float buyRate): void
+getSellRate(): Float
+setSellRate(Float sellRate): void
+getTotalValue(): Double
+setTotalValue(int valueToChange): void
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1160</x>
      <y>500</y>
      <w>340</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>ExchangeRate
--
-day: LocalDate
-currencyName: String
-exchangeRate: Float
--
+ExchangeRate(LocalDate day, int scale, String currency, Float price): ctor
+getLocalDate(): LocalDate
+getName(): String
+setName(String currencyName): boolean
+getExchangeRate(): Float
+setExchangeRate(Float rate): boolean
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>430</y>
      <w>420</w>
      <h>330</h>
    </coordinates>
    <panel_attributes>ExchangeSite
--
+name: String
+transactionList = new ArrayList(): List&lt;Transaction&gt;
-backupReport: Report
-theBox: MoneyBox
-currencyMap: Map&lt;String, Currency&gt;
-rates: List&lt;ExchangeRate&gt;
-logger: Logger
--
+ExchangeSite(String Name): ctor
+ExchangeSite(String Name, LocalDateTime TimeStamp): ctor
+startTheDay(): void
+calculatePrice(String currencyCode, int amount, TransactionMode transactionType): int
+buyMoney(Order orderData): boolean
+sellMoney(Order orderData): boolean
+printSiteReport(String destination): void
+shutDownService(String destination): void
+getCurrencyMap(): Map&lt;String, Currency&gt;
+getAvailableAmount(String currencyCode): Optional&lt;Double&gt;
+completeOrder(Order orderData): Order
+addOrderToQueue(Order d): List&lt;Order&gt;
+processOrderQueue(List&lt;Order&gt; orderList): List&lt;Order&gt;
+getTransactionList(): List&lt;Transaction&gt;
+getRates(): List&lt;ExchangeRate&gt;
+setName(String name): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>500</x>
      <y>900</y>
      <w>370</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>MoneyBox
--
-serialVersionUID = 1L: long
-logger: Logger
-currencyMap: Map&lt;String, Currency&gt;
--
+MoneyBox(Map&lt;String, Currency&gt; currencyMap): ctor
+getCurrencyMap(): Map&lt;String, Currency&gt;
+setCurrencyMap(Map&lt;String, Currency&gt; currencyMap): void
+getSerialversionuid(): long
+addNewCurrency(double amount, String currencyName, Float rate): boolean
+denominationControl(String currencyName, double amount): int
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>260</y>
      <w>290</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
MoneyService
--
--
+buyMoney(Order orderData): boolean
+sellMoney(Order orderData): boolean
+printSiteReport(String destination): void
+shutDownService(String destination): void
~getCurrencyMap(): Map&lt;String, Currency&gt;
~getAvailableAmount(String currencyCode): Optional&lt;Double&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>900</x>
      <y>900</y>
      <w>430</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>MoneyServiceIO
--
+projectConfigFilename = "ProjectConfig_" + LocalDate.now().toString() + ".txt": String
+currencyConfigFilename = "CurrencyConfig_" + LocalDate.now().toString() + ".txt": String
~serializedDailyTransactionFilename = "DailyTransactions.ser": String
~serializedCustomerDataBaseFilename = "CustomerDatabase.ser": String
~textFormattedDailyTransactions = "DailyTransactions.txt": String
+referenceCurrency: String
+refDate: LocalDate
+LDT = LocalDateTime.now(): LocalDateTime
--
+changeDate(LocalDate date): void
+getReferenceCurrency(): String
+setRefDate(LocalDate refDate): void
+parseProjectConfig(List&lt;String&gt; listToBeParsed): Map&lt;String, Double&gt;
+parseCurrencyConfig(List&lt;String&gt; listToBeParsed): List&lt;ExchangeRate&gt;
+readTextFiles(String filename): List&lt;String&gt;
+saveSerializedDailyTransactions(List&lt;Transaction&gt; listToBeSaved, String filename): boolean
+saveTxtMoneyBox(Map&lt;String, Currency&gt; listToBeSaved, String filename): boolean
+saveSerializedReport(Report r): boolean
+readSerializedDailyTransactionList(String filename): List&lt;Transaction&gt;
+saveDailyTransactionListAsText(List&lt;Transaction&gt; dailyList, String filename): boolean
+findFolders(): List&lt;File&gt;
+getPathName(String folder): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>180</x>
      <y>420</y>
      <w>370</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>MonyeServiceLoggFilter
--
--
+isLoggable(LogRecord lr): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>530</y>
      <w>400</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Order
--
-TransactionType: TransactionMode
-value: int
-currencyCode: String
--
+Order(int value, String currencyCode, TransactionMode Transaction): ctor
+getValue(): int
+getTransactionType(): TransactionMode
+getCurrencyCode(): String
+toString(): String
+generateDailyOrder(List&lt;ExchangeRate&gt; tempCurrencies, int amount): List&lt;Order&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1350</x>
      <y>900</y>
      <w>340</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>Report
--
-id: long
~day: LocalDateTime
~dailyTransactions: List&lt;Transaction&gt;
+uniqueId = 0: int
+uniqueFilename: String
--
+Report(LocalDateTime day, List&lt;Transaction&gt; dailyTransactions): ctor
+getDay(): LocalDateTime
+setDay(LocalDateTime day): void
+getDailyTransaction(): List&lt;Transaction&gt;
+setDailyTransaction(List&lt;Transaction&gt; dailyTransaction): void
+getId(): long
+getUniqueFileName(): String
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1160</x>
      <y>190</y>
      <w>240</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>Transaction
--
-serialVersionUID = 1L: long
-id: int
-timeStamp: LocalDateTime
-currencyCode: String
-amount: int
-mode: TransactionMode
-uniqueId = 0: int
--
+Transaction(Order order): ctor
+Transaction(Order order, LocalDateTime ref): ctor
+getUniqueId(): int
+setUniqueId(int uniqueId): void
+getId(): int
+getTimeStamp(): LocalDateTime
+getCurrencyCode(): String
+getAmount(): int
+getMode(): TransactionMode
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>790</x>
      <y>200</y>
      <w>210</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>MoneyServiceAPP
--
-logger: Logger
-fh: FileHandler
--
+main(String[] args): void
+clientMenu(ExchangeSite theSite): void
+mainMenuCLI(ExchangeSite theSite): void
-createOrder(ExchangeSite theSite, Scanner keyboard): void
+test(): Consumer&lt;LocalDate&gt;
--</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
