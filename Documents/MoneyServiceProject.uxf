<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=10
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2550</x>
      <y>220</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>User
--
-name: String
-Priorities: enum
-type:enum (Customer,Employee,Admin)
-password: String

--
+User():ctor
--
Responsibilities
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>770</x>
      <y>1190</y>
      <w>50</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>1...n
lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>220</x>
      <y>60</y>
      <w>220</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>2021-04-16

Project Manager = Johannes, 
Sys Architect = Karl, 
Programmer = ALL.

Third version: 2021-04-12
Checked functionality, added some notes for progress.

Second version: 2021-04-08

First version: Date: 2021-04-07


style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>910</y>
      <w>30</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>1
lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2570</x>
      <y>0</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>PayService
--

--

--
Responsibilities
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2560</x>
      <y>450</y>
      <w>210</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>GUI
--

--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>550</x>
      <y>750</y>
      <w>140</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1100</x>
      <y>530</y>
      <w>160</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>840</x>
      <y>910</y>
      <w>730</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>710.0;150.0;710.0;30.0;10.0;30.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>910</y>
      <w>320</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>300.0;150.0;300.0;60.0;10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>190</x>
      <y>910</y>
      <w>570</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;60.0;550.0;60.0;550.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2800</x>
      <y>300</y>
      <w>550</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>MoneyService::CustomerDataBase
--
-id: long
~dailyTransactions: List&lt;Transaction&gt;
~customerInfoHistory: Map&lt;String, List&lt;Transaction&gt;&gt;
~customerOrderHistory: Map&lt;String, List&lt;Order&gt;&gt;
--
+CustomerDataBase(long id, List&lt;Transaction&gt; dailyTransactions, Map&lt;String, List&lt;Transaction&gt;&gt; customerInfoHistory, Map&lt;String, List&lt;Order&gt;&gt; customerOrderHistory): ctor
+Export(): void
+Import(): void
+getDailyTransactions(): List&lt;Transaction&gt;
+setDailyTransactions(List&lt;Transaction&gt; dailyTransactions): void
+getCustomerInfoHistory(): Map&lt;String, List&lt;Transaction&gt;&gt;
+setCustomerInfoHistory(Map&lt;String, List&lt;Transaction&gt;&gt; customerInfoHistory): void
+getCustomerOrderHistory(): Map&lt;String, List&lt;Order&gt;&gt;
+setCustomerOrderHistory(Map&lt;String, List&lt;Order&gt;&gt; customerOrderHistory): void
+getId(): long
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2820</x>
      <y>0</y>
      <w>420</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>MoneyService::Customer
--
-id: long
-Name: String
-email: String
-mobileNo: int
--
+Customer(long id, String name, String email, int mobileNo): ctor
+setEmail(String email): void
+setMobileNo(int mobileNo): void
+getId(): long
+getName(): String
+getEmail(): String
+getMobileNo(): int
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1100</x>
      <y>700</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>1
lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;20.0;140.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>400</y>
      <w>210</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>MoneyServiceApp
--

--
+Main()
--
Responsibilities
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>960</x>
      <y>490</y>
      <w>30</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1660</x>
      <y>980</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Note..
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>670</x>
      <y>620</y>
      <w>440</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>MoneyService::ExchangeSite
--
+name: String
+transactionList = new ArrayList(): List&lt;Transaction&gt;
-backupReport: Report
-theBox: MoneyBox
-currencyMap: Map&lt;String, Currency&gt;
-rates: List&lt;ExchangeRate&gt;
-logger: Logger
--
+ExchangeSite(String Name): ctor
+startTheDay(): void
+calculatePrice(String currencyCode, int amount, Order.TransactionMode transactionType): int
+buyMoney(Order orderData): boolean
+sellMoney(Order orderData): boolean
+printSiteReport(String destination): void
+shutDownService(String destination): void
+getCurrencyMap(): Map&lt;String, Currency&gt;
+getAvailableAmount(String currencyCode): Optional&lt;Double&gt;
+completeOrder(Order orderData): Order
+getTransactionList(): List&lt;Transaction&gt;
+getRates(): List&lt;ExchangeRate&gt;
+setName(String name): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>350</y>
      <w>240</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>MoneyService::Transaction
--
-serialVersionUID = 1L: long
-id: int
-timeStamp: LocalDateTime
-currencyCode: String
-amount: int
-mode: TransactionMode
-uniqueId = 0: int
--
+Transaction(Order order): ctor
+Transaction(Order order, LocalDateTime ref): ctor
+getUniqueId(): int
+setUniqueId(int uniqueId): void
+getId(): int
+getTimeStamp(): LocalDateTime
+getCurrencyCode(): String
+getAmount(): int
+getMode(): TransactionMode
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>980</x>
      <y>1060</y>
      <w>440</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>MoneyService::MoneyServiceIO
--
+projectConfigFilename = "ProjectConfig_2021-04-01.txt": String
+currencyConfigFilename = "CurrencyConfig_2021-04-01.txt": String
~serializedDailyTransactionFilename = "DailyTransactions.ser": String
~serializedCustomerDataBaseFilename = "CustomerDatabase.ser": String
~textFormattedDailyTransactions = "DailyTransactions.txt": String
+referenceCurrency: String
+refDate: LocalDate
+LDT = LocalDateTime.now(): LocalDateTime
--
+getReferenceCurrency(): String
+parseProjectConfig(List&lt;String&gt; listToBeParsed): Map&lt;String, Double&gt;
+parseCurrencyConfig(List&lt;String&gt; listToBeParsed): List&lt;ExchangeRate&gt;
+readTextFiles(String filename): List&lt;String&gt;
+saveSerializedDailyTransactions(List&lt;Transaction&gt; listToBeSaved, String filename): boolean
+saveSerializedReport(Report r): boolean
+readSerializedDailyTransactionList(String filename): List&lt;Transaction&gt;
+saveDailyTransactionListAsText(List&lt;Transaction&gt; dailyList, String filename): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1440</x>
      <y>1060</y>
      <w>340</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>MoneyService::Report
--
-id: long
~day: LocalDateTime
~dailyTransactions: List&lt;Transaction&gt;
+uniqueId = 0: int
+uniqueFilename: String
--
+Report(LocalDateTime day, List&lt;Transaction&gt; dailyTransactions): ctor
+getDay(): LocalDateTime
+setDay(LocalDateTime day): void
+getDailyTransaction(): List&lt;Transaction&gt;
+setDailyTransaction(List&lt;Transaction&gt; dailyTransaction): void
+getId(): long
+getUniqueFileName(): String
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>60</x>
      <y>1060</y>
      <w>460</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>MoneyService::Config
--
-MIN_AMMOUNT = 50: int
-MAX_AMMOUNT = 10000: int
+exchangeRateList = new ArrayList&lt;ExchangeRate&gt;(): List&lt;ExchangeRate&gt;
-logger: Logger
--
+getExchangeRateList(): List&lt;ExchangeRate&gt;
+setMIN_AMMOUNT(int MIN_AMMOUNT): boolean
+setMAX_AMMOUNT(int MAX_AMMOUNT): boolean
+getMIN_AMMOUNT(): int
+getMAX_AMMOUNT(): int
+setRatesInCurrency(List&lt;ExchangeRate&gt; currencyList, Map&lt;String, Currency&gt; currencyMap): void
+setTheRates(): List&lt;ExchangeRate&gt;
+fillTheMoneyBox(MoneyBox theBox, Map&lt;String, Currency&gt; currencyMap): MoneyBox
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>610</x>
      <y>1240</y>
      <w>290</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>MoneyService::Currency
--
-serialVersionUID = 1L: long
-totalValue: double
~buyRate: Float
~sellRate: Float
--
+Currency(int totalValue, Float buyRate, Float sellRate): ctor
+getBuyRate(): Float
+setBuyRate(Float buyRate): void
+getSellRate(): Float
+setSellRate(Float sellRate): void
+getTotalValue(): Double
+setTotalValue(int valueToChange): void
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>660</y>
      <w>340</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>MoneyService::ExchangeRate
--
-day: LocalDate
-currencyName: String
-exchangeRate: Float
--
+ExchangeRate(LocalDate day, int scale, String currency, Float price): ctor
+getLocalDate(): LocalDate
+getName(): String
+setName(String currencyName): boolean
+getExchangeRate(): Float
+setExchangeRate(Float rate): boolean
+toString(): String
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>160</x>
      <y>660</y>
      <w>400</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>MoneyService::Order
--
-TransactionType: TransactionMode
-value: int
-currencyCode: String
--
+Order(int value, String currencyCode, TransactionMode Transaction): ctor
+getValue(): int
+getTransactionType(): TransactionMode
+getCurrencyCode(): String
+toString(): String
+generateDailyOrder(List&lt;ExchangeRate&gt; tempCurrencies, int amount): List&lt;Order&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>540</x>
      <y>1060</y>
      <w>400</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>MoneyService::MoneyBox
--
-serialVersionUID = 1L: long
-logger: Logger
-currencyMap: Map&lt;String, Currency&gt;
--
+MoneyBox(Map&lt;String, Currency&gt; currencyMap): ctor
+getCurrencyMap(): Map&lt;String, Currency&gt;
+setCurrencyMap(Map&lt;String, Currency&gt; currencyMap): void
+getSerialversionuid(): long
+addNewCurrency(double amount, String currencyName, Float rate): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>420</y>
      <w>290</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
MoneyService::MoneyService
--
--
+buyMoney(Order orderData): boolean
+sellMoney(Order orderData): boolean
+printSiteReport(String destination): void
+shutDownService(String destination): void
~getCurrencyMap(): Map&lt;String, Currency&gt;
~getAvailableAmount(String currencyCode): Optional&lt;Double&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>260</x>
      <y>540</y>
      <w>270</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>MoneyService::MonyeServiceLoggFilter
--
--
+isLoggable(LogRecord lr): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
